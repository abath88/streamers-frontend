{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/frontend-steamers/src/components/StreamersList/StreamersList.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchSteamers } from \"../../redux/slice/streamerSlice\";\nimport { Link } from \"react-router-dom\";\nimport Block from \"../Block/Block\";\nimport profile from '../../profile.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StreamerList = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchSteamers());\n  }, [dispatch]);\n  const streamers = useSelector(state => state.streamers.streamers);\n  const isLoading = useSelector(state => state.streamers.fetchLoading);\n  const error = useSelector(state => state.streamers.fetchError);\n  if (isLoading) {\n    return 'loading...';\n  }\n  if (error) {\n    return error;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: streamers.map((streamer, key) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `${streamer._id}`,\n      children: /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: profile,\n          alt: \"profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: streamer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(StreamerList, \"C3X4yAhIreKw0QwMNzCKCObYAN0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = StreamerList;\nexport default StreamerList;\nvar _c;\n$RefreshReg$(_c, \"StreamerList\");","map":{"version":3,"names":["useDispatch","useSelector","useEffect","fetchSteamers","Link","Block","profile","jsxDEV","_jsxDEV","Fragment","_Fragment","StreamerList","_s","dispatch","streamers","state","isLoading","fetchLoading","error","fetchError","children","map","streamer","key","to","_id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/frontend-steamers/src/components/StreamersList/StreamersList.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchSteamers } from \"../../redux/slice/streamerSlice\";\nimport { Link } from \"react-router-dom\";\nimport Block from \"../Block/Block\";\n\nimport profile from '../../profile.png'\n\nconst StreamerList = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchSteamers())\n  }, [dispatch])\n  \n  const streamers = useSelector((state) => state.streamers.streamers)\n  const isLoading = useSelector((state) => state.streamers.fetchLoading)\n  const error = useSelector((state) => state.streamers.fetchError)\n\n  if (isLoading) {\n    return 'loading...'\n  }\n\n  if (error) {\n    return error\n  }\n\n  return (\n    <>\n      {streamers.map((streamer, key) => (\n        <Link to={`${streamer._id}`}>\n          <Block key={key}>\n              <img src={profile} alt=\"profile\"/>\n              <h1>{streamer.name}</h1>\n          </Block>\n        </Link>\n      ))}\n    </>\n  )\n}\n\nexport default StreamerList;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAOC,OAAO,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BE,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACV,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC;EAEd,MAAMC,SAAS,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,SAAS,CAACA,SAAS,CAAC;EACnE,MAAME,SAAS,GAAGf,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,SAAS,CAACG,YAAY,CAAC;EACtE,MAAMC,KAAK,GAAGjB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,SAAS,CAACK,UAAU,CAAC;EAEhE,IAAIH,SAAS,EAAE;IACb,OAAO,YAAY;EACrB;EAEA,IAAIE,KAAK,EAAE;IACT,OAAOA,KAAK;EACd;EAEA,oBACEV,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACGN,SAAS,CAACO,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG,kBAC3Bf,OAAA,CAACJ,IAAI;MAACoB,EAAE,EAAG,GAAEF,QAAQ,CAACG,GAAI,EAAE;MAAAL,QAAA,eAC1BZ,OAAA,CAACH,KAAK;QAAAe,QAAA,gBACFZ,OAAA;UAAKkB,GAAG,EAAEpB,OAAQ;UAACqB,GAAG,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAClCvB,OAAA;UAAAY,QAAA,EAAKE,QAAQ,CAACU;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAFhBR,GAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACP;EAAC,gBACF,CAAC;AAEP,CAAC;AAAAnB,EAAA,CA/BKD,YAAY;EAAA,QACCX,WAAW,EAMVC,WAAW,EACXA,WAAW,EACfA,WAAW;AAAA;AAAAgC,EAAA,GATrBtB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}