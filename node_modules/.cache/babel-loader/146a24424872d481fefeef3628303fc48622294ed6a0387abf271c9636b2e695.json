{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/frontend-steamers/src/components/StreamersList/StreamersList.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchSteamers } from \"../../redux/slice/streamerSlice\";\nimport { Link } from \"react-router-dom\";\nimport Block from \"../Block/Block\";\nimport StreamerItem from \"../StreamerItem/StreamerItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StreamerList = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchSteamers());\n  }, [dispatch]);\n  const streamers = useSelector(state => state.streamers.streamers);\n  const isLoading = useSelector(state => state.streamers.fetchLoading);\n  const error = useSelector(state => state.streamers.fetchError);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(StreamerItemLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return error;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: streamers.map((streamer, key) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `${streamer._id}`,\n      children: /*#__PURE__*/_jsxDEV(Block, {\n        children: /*#__PURE__*/_jsxDEV(StreamerItem, {\n          name: streamer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(StreamerList, \"C3X4yAhIreKw0QwMNzCKCObYAN0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = StreamerList;\nexport default StreamerList;\nvar _c;\n$RefreshReg$(_c, \"StreamerList\");","map":{"version":3,"names":["useDispatch","useSelector","useEffect","fetchSteamers","Link","Block","StreamerItem","jsxDEV","_jsxDEV","Fragment","_Fragment","StreamerList","_s","dispatch","streamers","state","isLoading","fetchLoading","error","fetchError","StreamerItemLoading","fileName","_jsxFileName","lineNumber","columnNumber","children","map","streamer","key","to","_id","name","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/frontend-steamers/src/components/StreamersList/StreamersList.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchSteamers } from \"../../redux/slice/streamerSlice\";\nimport { Link } from \"react-router-dom\";\nimport Block from \"../Block/Block\";\nimport StreamerItem from \"../StreamerItem/StreamerItem\";\n\n\nconst StreamerList = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchSteamers())\n  }, [dispatch])\n  \n  const streamers = useSelector((state) => state.streamers.streamers)\n  const isLoading = useSelector((state) => state.streamers.fetchLoading)\n  const error = useSelector((state) => state.streamers.fetchError)\n\n  if (isLoading) {\n    return <StreamerItemLoading />\n  }\n\n  if (error) {\n    return error\n  }\n\n  return (\n    <>\n      {streamers.map((streamer, key) => (\n        <Link to={`${streamer._id}`}>\n          <Block key={key}>\n              <StreamerItem name={streamer.name} />\n          </Block>\n        </Link>\n      ))}\n    </>\n  )\n}\n\nexport default StreamerList;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BE,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACV,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC;EAEd,MAAMC,SAAS,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,SAAS,CAACA,SAAS,CAAC;EACnE,MAAME,SAAS,GAAGf,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,SAAS,CAACG,YAAY,CAAC;EACtE,MAAMC,KAAK,GAAGjB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,SAAS,CAACK,UAAU,CAAC;EAEhE,IAAIH,SAAS,EAAE;IACb,oBAAOR,OAAA,CAACY,mBAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChC;EAEA,IAAIN,KAAK,EAAE;IACT,OAAOA,KAAK;EACd;EAEA,oBACEV,OAAA,CAAAE,SAAA;IAAAe,QAAA,EACGX,SAAS,CAACY,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG,kBAC3BpB,OAAA,CAACJ,IAAI;MAACyB,EAAE,EAAG,GAAEF,QAAQ,CAACG,GAAI,EAAE;MAAAL,QAAA,eAC1BjB,OAAA,CAACH,KAAK;QAAAoB,QAAA,eACFjB,OAAA,CAACF,YAAY;UAACyB,IAAI,EAAEJ,QAAQ,CAACI;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD7BI,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACP;EAAC,gBACF,CAAC;AAEP,CAAC;AAAAZ,EAAA,CA9BKD,YAAY;EAAA,QACCX,WAAW,EAMVC,WAAW,EACXA,WAAW,EACfA,WAAW;AAAA;AAAA+B,EAAA,GATrBrB,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}